---
title: "GPUpgrade | Home"
---
{% extends "layouts/base.njk" %}

{% block content %}
<section class="hero">
  <div class="hero-container">
    <div class="hero-content">
      <h1 class="hero-title">
        Find Your Perfect
        <span class="hero-title-accent">GPU Upgrade</span>
      </h1>
      <p class="hero-subtitle">
        Discover if your graphics card upgrade is worth it with our intelligent performance calculator.
      </p>
    </div>
    <div class="hero-visual">
      <div class="hero-card">
        <div class="hero-card-glow"></div>
      </div>
    </div>
  </div>
</section>

<section class="calculator-section">
  <div class="container">
    <div x-data="upgradeCalculator" x-init="init()" class="calculator">

      <!-- Current GPU Selection -->
      <div class="input-group">
        <h2 class="section-title">Your Current GPU</h2>
        <div class="search-container" x-data="{ focused: false }">
          <input type="text" x-model="searchQuery" @input="searchGPUs()" @focus="showDropdown = true; focused = true"
            @blur="focused = false" placeholder="Search for your GPU (e.g., RTX 3070)" class="search-input"
            :class="{ 'search-input-focused': focused }" autocomplete="off">

          <!-- Search icon -->
          <div class="search-icon">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="11" cy="11" r="8"></circle>
              <path d="m21 21-4.35-4.35"></path>
            </svg>
          </div>

          <!-- Dropdown -->
          <div x-show="showDropdown && filteredGPUs.length > 0" x-transition:enter="dropdown-enter"
            x-transition:enter-start="dropdown-enter-start" x-transition:enter-end="dropdown-enter-end"
            x-transition:leave="dropdown-leave" x-transition:leave-start="dropdown-leave-start"
            x-transition:leave-end="dropdown-leave-end" class="dropdown">
            <template x-for="gpu in filteredGPUs.slice(0, 8)" :key="gpu.slug">
              <div @click="selectGPU(gpu)" class="dropdown-item">
                <span x-text="gpu.name" class="dropdown-item-name"></span>
                <span x-text="gpu.score + ' pts'" class="dropdown-item-score"></span>
              </div>
            </template>
          </div>
        </div>

        <!-- Selected GPU Display -->
        <div x-show="selectedGPU" x-transition:enter="card-enter" x-transition:enter-start="card-enter-start"
          x-transition:enter-end="card-enter-end" class="selected-gpu">
          <div class="selected-gpu-content">
            <div class="selected-gpu-info">
              <h3 class="selected-gpu-name" x-text="selectedGPU?.name"></h3>
              <p class="selected-gpu-score">
                Performance: <span x-text="selectedGPU ? selectedGPU.score + ' pts' : ''"></span>
              </p>
            </div>
            <button @click="clearSelection()" class="btn btn-secondary btn-sm">
              Clear
            </button>
          </div>
        </div>
      </div>

      <!-- Performance Slider -->
      <div class="input-group">
        <h2 class="section-title">Minimum Performance Improvement</h2>
        <div class="slider-container">
          <input type="range" x-model="minImprovement" min="10" max="100" step="5" class="slider"
            style="--value: {{ minImprovement }}%">
          <div class="slider-labels">
            <span class="slider-label">10%</span>
            <span class="slider-value" x-text="minImprovement + '%'"></span>
            <span class="slider-label">100%</span>
          </div>
        </div>
      </div>

      <!-- Calculate Button -->
      <div class="input-group">
        <button @click="calculateUpgrades()" :disabled="!selectedGPU" class="btn btn-primary btn-large"
          :class="{ 'btn-disabled': !selectedGPU }">
          <span x-show="!isCalculating">Calculate Upgrades</span>
          <span x-show="isCalculating" class="loading-spinner">
            <svg class="spinner" viewBox="0 0 24 24">
              <circle cx="12" cy="12" r="10" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                stroke-dasharray="31.416" stroke-dashoffset="31.416">
                <animate attributeName="stroke-dasharray" dur="2s" values="0 31.416;15.708 15.708;0 31.416"
                  repeatCount="indefinite" />
                <animate attributeName="stroke-dashoffset" dur="2s" values="0;-15.708;-31.416"
                  repeatCount="indefinite" />
            </svg>
            Calculating...
          </span>
        </button>
        <p x-show="!selectedGPU" class="help-text">
          Please select a GPU first
        </p>
      </div>

      <!-- Results -->
      <div x-show="results.length > 0" x-transition:enter="results-enter" x-transition:enter-start="results-enter-start"
        x-transition:enter-end="results-enter-end" class="results-section">
        <h2 class="section-title">
          Upgrade Recommendations
          <span class="results-count" x-text="'(' + results.length + ' found)'"></span>
        </h2>
        <p class="results-subtitle">
          GPUs with at least <span x-text="minImprovement" class="accent-text"></span>% improvement
        </p>

        <div class="results-grid">
          <template x-for="(result, index) in results.slice(0, 10)" :key="result.slug">
            <div class="result-card" x-transition:enter="card-enter" x-transition:enter-start="card-enter-start"
              x-transition:enter-end="card-enter-end" :style="'animation-delay: ' + (index * 0.1) + 's'">
              <div class="result-card-header">
                <h3 class="result-card-title" x-text="result.name"></h3>
                <div class="improvement-badge">
                  +<span x-text="Math.round(result.improvement)"></span>%
                </div>
              </div>
              <div class="result-card-stats">
                <div class="stat">
                  <span class="stat-label">Current</span>
                  <span class="stat-value" x-text="result.currentScore + ' pts'"></span>
                </div>
                <div class="stat-arrow">‚Üí</div>
                <div class="stat">
                  <span class="stat-label">New</span>
                  <span class="stat-value" x-text="result.newScore + ' pts'"></span>
                </div>
              </div>
            </div>
          </template>
        </div>

        <div x-show="results.length > 10" class="show-more">
          <p class="show-more-text">
            Showing top 10 results. <span x-text="results.length - 10"></span> more available.
          </p>
          <a href="/gpu/" class="btn btn-secondary">View All GPUs</a>
        </div>
      </div>

      <!-- No Results -->
      <div x-show="calculatorRun && results.length === 0" x-transition:enter="card-enter"
        x-transition:enter-start="card-enter-start" x-transition:enter-end="card-enter-end" class="no-results">
        <div class="no-results-icon">üîç</div>
        <h3 class="no-results-title">No upgrades found</h3>
        <p class="no-results-text">
          No GPUs found with at least <span x-text="minImprovement" class="accent-text"></span>% improvement.
        </p>
        <button @click="minImprovement = 10" class="btn btn-secondary">
          Try Lower Threshold
        </button>
      </div>

    </div>
  </div>
</section>
{% endblock %}
