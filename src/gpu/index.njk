---
title: "GPUpgrade | GPU List"
---
{% extends "layouts/base.njk" %}

{% block content %}
<script>
  const gpuJsonUrl = "https://webcommits.github.io/gpupgrade/assets/data/gpu-data.json";
  window.gpuData = null;

  window.gpuDataPromise = fetch(gpuJsonUrl)
    .then(response => {
      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
      return response.json();
    })
    .then(data => {
      console.log("GPU Data loaded (gpulist):", data);
      window.gpuData = data;
      return data;
    })
    .catch(err => {
      console.error("Failed to load GPU data (gpulist):", err);
      window.gpuData = { gpus: {} };
      return window.gpuData;
    });
</script>
<section class="page-header">
  <div class="container">
    <h1 class="page-title">GPU Performance List</h1>
    <p class="page-subtitle">Complete database of graphics cards with performance scores</p>
  </div>
</section>

<section class="gpu-list-section">
  <div class="container">
    <div x-data="gpuList" x-init="init()" class="gpu-list">

      <!-- Search and Filters -->
      <div class="filters-panel">
        <div class="filters-grid">

          <!-- Search -->
          <div class="filter-group">
            <label class="filter-label">Search GPUs</label>
            <div class="search-container">
              <input type="text" x-model="searchQuery" @input="filterGPUs()"
                placeholder="Search by name (RTX, RX, 4090...)" class="search-input">
              <div class="search-icon">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <circle cx="11" cy="11" r="8"></circle>
                  <path d="m21 21-4.35-4.35"></path>
                </svg>
              </div>
            </div>
          </div>

          <!-- Brand Filter -->
          <div class="filter-group">
            <label class="filter-label">Brand</label>
            <div class="radio-group">
              <label class="radio-option">
                <input type="radio" x-model="brandFilter" value="all" @change="filterGPUs()" name="brand">
                <span class="radio-button"></span>
                All
              </label>
              <label class="radio-option">
                <input type="radio" x-model="brandFilter" value="nvidia" @change="filterGPUs()" name="brand">
                <span class="radio-button"></span>
                NVIDIA
              </label>
              <label class="radio-option">
                <input type="radio" x-model="brandFilter" value="amd" @change="filterGPUs()" name="brand">
                <span class="radio-button"></span>
                AMD
              </label>
            </div>
          </div>

          <!-- Sort Options -->
          <div class="filter-group">
            <label class="filter-label">Sort by</label>
            <div class="select-group">
              <select x-model="sortBy" @change="sortGPUs()" class="select-input">
                <option value="name">Name (A-Z)</option>
                <option value="score">Performance Score</option>
              </select>
              <label class="checkbox-option">
                <input type="checkbox" x-model="sortDescending" @change="sortGPUs()">
                <span class="checkbox"></span>
                Descending
              </label>
            </div>
          </div>

        </div>

        <!-- Results Count -->
        <div class="results-info">
          <span class="results-count">
            Showing <span x-text="Math.min(filteredGPUs.length, visibleCount)" class="accent-text"></span>
            of <span x-text="filteredGPUs.length" class="accent-text"></span> GPUs
          </span>
          <div class="view-toggle" x-data="{ viewMode: 'grid' }">
            <button @click="viewMode = 'grid'" :class="{ active: viewMode === 'grid' }" class="view-button"
              aria-label="Grid view">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                <rect x="3" y="3" width="7" height="7"></rect>
                <rect x="14" y="3" width="7" height="7"></rect>
                <rect x="14" y="14" width="7" height="7"></rect>
                <rect x="3" y="14" width="7" height="7"></rect>
              </svg>
            </button>
            <button @click="viewMode = 'list'" :class="{ active: viewMode === 'list' }" class="view-button"
              aria-label="List view">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="8" y1="6" x2="21" y2="6"></line>
                <line x1="8" y1="12" x2="21" y2="12"></line>
                <line x1="8" y1="18" x2="21" y2="18"></line>
                <line x1="3" y1="6" x2="3.01" y2="6"></line>
                <line x1="3" y1="12" x2="3.01" y2="12"></line>
                <line x1="3" y1="18" x2="3.01" y2="18"></line>
              </svg>
            </button>
          </div>
        </div>
      </div>

      <!-- GPU Grid -->
      <div class="gpu-grid" :class="{ 'gpu-grid-list': viewMode === 'list' }">
        <template x-for="(gpu, index) in filteredGPUs.slice(0, visibleCount)" :key="gpu.slug">
          <div class="gpu-card" x-transition:enter="card-enter" x-transition:enter-start="card-enter-start"
            x-transition:enter-end="card-enter-end" :style="'animation-delay: ' + (index % 20 * 0.05) + 's'">

            <!-- GPU Header -->
            <div class="gpu-card-header">
              <h3 class="gpu-card-title" x-text="gpu.name"></h3>
              <div class="gpu-card-brand" x-text="getBrand(gpu.name)"></div>
            </div>

            <!-- Performance Score -->
            <div class="gpu-card-score">
              <span class="score-label">Performance Score</span>
              <span class="score-value" x-text="gpu.score"></span>
            </div>

            <!-- Performance Bar -->
            <div class="performance-bar">
              <div class="performance-bar-fill"
                :style="'width: ' + Math.min((gpu.score / maxPerformance * 100), 100) + '%'">
              </div>
            </div>

            <!-- Actions -->
            <div class="gpu-card-actions">
              <button @click="selectForComparison(gpu)" :class="{ 'btn-selected': isSelected(gpu) }"
                class="btn btn-secondary btn-sm" :aria-label="'Add ' + gpu.name + ' to comparison'">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M20 6 9 17l-5-5"></path>
                </svg>
                Compare
              </button>
              <button @click="useInCalculator(gpu)" class="btn btn-primary btn-sm"
                :aria-label="'Use ' + gpu.name + ' in calculator'">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                  <line x1="16" y1="2" x2="16" y2="6"></line>
                  <line x1="8" y1="2" x2="8" y2="6"></line>
                  <line x1="3" y1="10" x2="21" y2="10"></line>
                </svg>
                Calculate
              </button>
            </div>
          </div>
        </template>
      </div>

      <!-- Show more button -->
      <div x-show="filteredGPUs.length > visibleCount" class="show-more-section">
        <button @click="showMore()" class="btn btn-secondary btn-large">
          Show More GPUs
        </button>
      </div>

      <!-- No Results -->
      <div x-show="filteredGPUs.length === 0" class="no-results">
        <div class="no-results-icon">ðŸŽ®</div>
        <h3 class="no-results-title">No GPUs found</h3>
        <p class="no-results-text">Try adjusting your search or filter criteria.</p>
        <button @click="clearFilters()" class="btn btn-secondary">
          Clear Filters
        </button>
      </div>

    </div>
  </div>
</section>

<!-- Comparison Bar -->
<div x-show="selectedForComparison.length > 0" x-transition:enter="comparison-bar-enter"
  x-transition:enter-start="comparison-bar-enter-start" x-transition:enter-end="comparison-bar-enter-end"
  x-transition:leave="comparison-bar-leave" x-transition:leave-start="comparison-bar-leave-start"
  x-transition:leave-end="comparison-bar-leave-end" class="comparison-bar">
  <div class="comparison-bar-content">
    <div class="comparison-info">
      <span class="comparison-label">Selected for comparison:</span>
      <span class="comparison-count"
        x-text="selectedForComparison.length + ' GPU' + (selectedForComparison.length > 1 ? 's' : '')"></span>
      <div class="comparison-chips">
        <template x-for="gpu in selectedForComparison.slice(0, 3)" :key="gpu.slug">
          <span class="comparison-chip" x-text="gpu.name"></span>
        </template>
        <span x-show="selectedForComparison.length > 3" class="comparison-chip">
          +<span x-text="selectedForComparison.length - 3"></span> more
        </span>
      </div>
    </div>
    <div class="comparison-actions">
      <button @click="goToComparison()" :disabled="selectedForComparison.length < 2" class="btn btn-primary"
        :class="{ 'btn-disabled': selectedForComparison.length < 2 }">
        Compare Now
      </button>
      <button @click="clearComparison()" class="btn btn-secondary">
        Clear All
      </button>
    </div>
  </div>
</div>
{% endblock %}
